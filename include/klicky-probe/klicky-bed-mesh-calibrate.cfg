# This macro was provided by discord user Garrettwp to whom i give my thanks for sharing it with me.
# I have tweaked it a lot.
# They are based on the great Annex magprobe dockable probe macros "#Originally developed by Mental,
# modified for better use on K-series printers by RyanG and Trails", kudos to them.
# That macro as since evolved into a klipper plugin that currently is pending inclusion in klipper, 
# more information here, https://github.com/Annex-Engineering/Quickdraw_Probe/tree/main/Klipper_Macros
# User richardjm revised the macro variables and added some functions, thanks a lot
# by standing on the shoulders of giants, lets see if we can see further
#
# the current home for this version is https://github.com/jlas1/Klicky-Probe 

[gcode_macro list_macros]
description: Lists registered macros (and optionally show variable state).
  Usage: LISTVARS SEARCH=<search_string> VARS=<0|1> SILENT=<0|1>
variable_macros: {}
gcode:
  # Load the config state once and save it.
  {% if not macros %}
    {% set renames = {} %}
    {% for k in printer.configfile.config %}
      {% if k.lower().startswith("gcode_macro") and
            printer.configfile.config[k].rename_existing and not k.lower().endswith("bed_mesh_calibrate") %}
          {% set name = k.split(None, 1)[1] | lower %}
          {% set dummy = renames.__setitem__(name,
                          [printer.configfile.config[k].rename_existing|lower] +
                            renames[name]|default([])) %}
      {% endif %}
    {% endfor %}
    {% for k in printer %}
      {% if k.lower().startswith("gcode_macro") %}
        {% set name = k.split(None, 1)[1] | lower %}
        {% set dummy = macros.__setitem__(name, renames[name]|default([])) %}
      {% endif %}
    {% endfor %}
  {% endif %}

  {% if params.SILENT|default(0)|int == 0 %}
    _LIST_MACROS_DISPLAY {rawparams}
  {% endif %}

###################
# Bed mesh calibrate
[gcode_macro BED_MESH_CALIBRATE]
rename_existing: BED_MESH_CALIBRATE_1
description: Perform Mesh Bed Leveling and z calibration with klicky automount
gcode:
    {% set V = printer["gcode_macro _User_Variables"].verbose %}
    {% if V %}
        { action_respond_info("Bed Mesh Calibrate") }
    {% endif %}

    _CheckProbe action=query
	G90
    Attach_Probe

    STATUS_CALIBRATING_Z
    CALIBRATE_Z
    
    _KLICKY_STATUS_MESHING
    BED_MESH_CALIBRATE_1 {% for p in params
           %}{'%s=%s ' % (p, params[p])}{%
          endfor %}

    Dock_Probe